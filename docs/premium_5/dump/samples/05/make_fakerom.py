import os

ffs = [0x00af, 0x0163, 0x02c3, 0x02e6, 0x02e7, 0x0302, 0x0821, 0x09be, 0x09d8, 0x0aa4, 0x0b22, 0x0b27, 0x0b51, 0x0ef6, 0x1313, 0x1431, 0x148b, 0x15f3, 0x15f6, 0x1749, 0x17ed, 0x1b7d, 0x1be2, 0x1c26, 0x1c59, 0x1dfc, 0x2017, 0x20f4, 0x210b, 0x211a, 0x221f, 0x2759, 0x275a, 0x28ac, 0x2974, 0x2995, 0x29ac, 0x29fc, 0x2a38, 0x2cfb, 0x30db, 0x311f, 0x3193, 0x320f, 0x36ea, 0x3908, 0x3981, 0x3bd2, 0x3d21, 0x3ed3, 0x3ed8, 0x42a2, 0x42a4, 0x43ad, 0x4645, 0x484b, 0x49d5, 0x4a01, 0x4a08, 0x4aaa, 0x4ad6, 0x4add, 0x4b7e, 0x4bcd, 0x4c20, 0x4c4c, 0x4c53, 0x4c72, 0x4caa, 0x4cd9, 0x4ce2, 0x4e1c, 0x51ab, 0x5617, 0x5628, 0x56a5, 0x5746, 0x5772, 0x597a, 0x59e6, 0x59e7, 0x5a9c, 0x5b3b, 0x5c82, 0x5cb5, 0x5d67, 0x5d7d, 0x6223, 0x6228, 0x62f7, 0x6300, 0x630e, 0x6335, 0x6339, 0x6348, 0x67bf, 0x67d5, 0x67d7, 0x6842, 0x698d, 0x699b, 0x6a25, 0x6a27, 0x6a32, 0x6a5f, 0x6a61, 0x6a7d, 0x6a84, 0x6a9f, 0x6ab1, 0x6ab8, 0x6abf, 0x6acd, 0x6af6, 0x6b05, 0x6b09, 0x6b10, 0x6b19, 0x6b22, 0x6b2b, 0x6b34, 0x6b3f, 0x6b49, 0x6b6c, 0x6b7d, 0x6b93, 0x6ba0, 0x6bf1, 0x6bff, 0x6c16, 0x6c2f, 0x6c45, 0x6c5e, 0x6c83, 0x6c8f, 0x6dad, 0x6df8, 0x6e3b, 0x6ea9, 0x7037, 0x7047, 0x707e, 0x70a2, 0x7106, 0x712b, 0x7130, 0x7155, 0x7177, 0x7180, 0x71a8, 0x71b1, 0x71c7, 0x71d0, 0x71ee, 0x71fd, 0x721f, 0x7221, 0x7236, 0x7244, 0x7246, 0x7252, 0x7260, 0x7262, 0x726a, 0x7297, 0x72e4, 0x72ef, 0x7306, 0x7310, 0x734c, 0x7357, 0x738a, 0x73a6, 0x73d5, 0x73de, 0x73e0, 0x73e4, 0x73fb, 0x743d, 0x7442, 0x744d, 0x748e, 0x7493, 0x749e, 0x74c6, 0x74cb, 0x74d9, 0x74ea, 0x7536, 0x7580, 0x75d4, 0x75ec, 0x7601, 0x7621, 0x7639, 0x764e, 0x76bb, 0x76c6, 0x79b2, 0x7b61, 0x7c5e, 0x7d6d, 0x7ddd, 0x7e1e, 0x7f05, 0x7f6f, 0x80f4, 0x884d, 0x89b2, 0x89b5, 0x90b0, 0x90b3, 0x9531, 0x98dc, 0xa041, 0xa044, 0xa187, 0xa1d5, 0xa1d8, 0xa4f4, 0xa5a0, 0xa618, 0xa63f, 0xa659, 0xa84d, 0xa85c, 0xa8bc, 0xa8cc, 0xa9b9, 0xa9ea, 0xaa3c, 0xab70, 0xaba1, 0xabaa, 0xabe2, 0xabe3, 0xacae, 0xacb1, 0xacb7, 0xacba, 0xad2f, 0xad32, 0xae2b, 0xae2e, 0xae99, 0xaeaa, 0xaebb, 0xaef5, 0xaef6, 0xaef8, 0xaeff, 0xaf02, 0xaf05, 0xaf0b, 0xaf0e, 0xaf1a, 0xaf8c, 0xafab, 0xb000, 0xb001, 0xb03e, 0xb070, 0xb0e9, 0xb104, 0xb107, 0xb10a, 0xb10d, 0xb110, 0xb137, 0xb13d, 0xb140, 0xb149, 0xb14c, 0xb14f, 0xb155, 0xb158, 0xb15b, 0xb15e, 0xb161, 0xb164, 0xb167, 0xb16a, 0xb16d, 0xb1b9, 0xb1bb, 0xb1c3, 0xb25e, 0xb28c, 0xb294, 0xb29b, 0xb29c, 0xb29e, 0xb2a0, 0xb2a1, 0xb2a6, 0xb2c3, 0xb2f2, 0xb303, 0xb3aa, 0xb3ab, 0xb3ac, 0xb3b8, 0xb3d2, 0xb47d, 0xb498, 0xb499, 0xb49a, 0xb49b, 0xb49c, 0xb49d, 0xb49e, 0xb49f, 0xb4c8, 0xb4c9, 0xb4ca, 0xb4cc, 0xb4cd, 0xb4cf, 0xb4d0, 0xb503, 0xb504, 0xb505, 0xb506, 0xb50a, 0xb50b, 0xb5b8, 0xb5bb, 0xb5be, 0xb66d, 0xb670, 0xb671, 0xb672, 0xb673, 0xb676, 0xb677, 0xb67a, 0xb67b, 0xb6a8, 0xb6ab, 0xb6ae, 0xb700, 0xb706, 0xb71b, 0xb71e, 0xb721, 0xb724, 0xb727, 0xb79a, 0xb83d, 0xb867, 0xb86a, 0xb90f, 0xb915, 0xb984, 0xb9fe, 0xbaba, 0xbb57, 0xbb59, 0xbb5b, 0xbb6a, 0xbb6c, 0xbbed, 0xbbef, 0xbbf1, 0xbc00, 0xbc02, 0xbc7b, 0xbc7c, 0xbcf2, 0xbcf9, 0xbd00, 0xbd0e, 0xbd13, 0xbd1f, 0xbd21, 0xbd2b, 0xbd34, 0xbd58, 0xbde1, 0xbeaa, 0xbee4, 0xbfa4, 0xbfd2, 0xc063, 0xc065, 0xc067, 0xc069, 0xc06b, 0xc06d, 0xc06f, 0xc071, 0xc073, 0xc075, 0xc077, 0xc079, 0xc07b, 0xc07d, 0xc07f, 0xc081, 0xc083, 0xc085, 0xc087, 0xc089, 0xc08b, 0xc08d, 0xc08f, 0xc091, 0xc093, 0xc095, 0xc097, 0xc099, 0xc09b, 0xc15e, 0xc186, 0xc1c1, 0xc1ef, 0xc270, 0xc272, 0xc274, 0xc276, 0xc278, 0xc27a, 0xc27c, 0xc27e, 0xc76f, 0xc771, 0xc773, 0xc775, 0xc777, 0xc779, 0xc77b, 0xc77d, 0xc77f, 0xc7aa, 0xc7ac, 0xc7ae, 0xc7b0, 0xc7b2, 0xc7b4, 0xc7b6, 0xc7b8, 0xc7ba, 0xc7bc, 0xc7be, 0xc7c0, 0xc7c2, 0xc8c7, 0xc8c9, 0xc8cb, 0xc8cd, 0xc8cf, 0xc8d1, 0xc8d3, 0xc8d5, 0xc8d7, 0xc8d9, 0xc8db, 0xc8dd, 0xc8e7, 0xcf75, 0xd247, 0xd2db, 0xd2de, 0xd2e1, 0xd2ea, 0xd2ed, 0xd2f0, 0xd2f3, 0xd2f6, 0xd2fc, 0xd2ff, 0xd327, 0xd362, 0xd366, 0xd36a, 0xd3ab, 0xd3af, 0xd4a2, 0xd4a5, 0xd4cc, 0xd5ff, 0xd689, 0xd6eb, 0xd7e8, 0xd7fc, 0xd810, 0xd844, 0xd8fa, 0xd94f, 0xd9a3, 0xd9f7, 0xda51, 0xda88, 0xdc0a, 0xdc1a, 0xdc36, 0xdca2, 0xdca7, 0xdd03, 0xdd1f, 0xde40, 0xdea7]

with open('fakerom.bin', 'wb') as f:
    i = 0
    while i < 0x0300:
        f.write(b'\x00')
        i += 1

    assert i == 0x0300
    while i < 0xefe0:
        if i in ffs:
            f.write(b'\xff')
        else:
            f.write(b'\x55')
        i += 1

    assert i == 0xefe0
    while i < 0xf000:
        f.write(b'\xbf')
        i += 1

    assert i == 0xf000

os.system('srec_cat fakerom.bin -binary -o fakerom.hex -intel -address-length=2 -line-length=44 -crlf')
